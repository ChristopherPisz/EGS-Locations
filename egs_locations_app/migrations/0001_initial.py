# Generated by Django 3.0.3 on 2020-07-06 07:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DepositSize',
            fields=[
                ('name', models.CharField(help_text='Describes the size in which a resource could appear', max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('name', models.CharField(help_text='Faction Name', max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Playfield',
            fields=[
                ('name', models.CharField(help_text='Name of the playfield', max_length=120, primary_key=True, serialize=False)),
                ('pvp', models.BooleanField(help_text='Pvp or Pve')),
                ('gravity', models.FloatField(help_text='Gravity on the playfield')),
                ('specialNotes', models.CharField(help_text='Anything particularly groovy about this playfield', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='PlayfieldSize',
            fields=[
                ('name', models.CharField(help_text='Name of the playfield size', max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='POI',
            fields=[
                ('name', models.CharField(help_text='Name of the POI', max_length=120, primary_key=True, serialize=False)),
                ('countWhiteContainers', models.IntegerField(help_text='The number of white containers in this POI is >= this number')),
                ('countYellowContainers', models.IntegerField(help_text='The number of yellow containers in this POI is >= this number')),
                ('countRedContainers', models.IntegerField(help_text='The number of red containers in this POI is >= this number')),
                ('countBrownContainers', models.IntegerField(help_text='The number of brown containers in this POI is >= this number')),
                ('countBlackContainers', models.IntegerField(help_text='The number of brown containers in this POI is >= this number')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('name', models.CharField(help_text='Name of the resource', max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('name', models.CharField(help_text='Name of the system', max_length=120, primary_key=True, serialize=False)),
                ('territory', models.ForeignKey(help_text='Faction territory the system belongs to', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.Faction')),
            ],
        ),
        migrations.CreateModel(
            name='PlayfieldResourceCount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('count', models.IntegerField(help_text='The number of instances of this particular resource and size combination on the particular playfield is >= this number')),
                ('playfield', models.ForeignKey(help_text='Name of the playfield the resource appears on', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.Playfield')),
                ('resource', models.ForeignKey(help_text='Name of the resource', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.Resource')),
                ('size', models.ForeignKey(help_text='Describes the size in which the resource appears', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.DepositSize')),
            ],
        ),
        migrations.CreateModel(
            name='PlayfieldPOICount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('count', models.IntegerField(help_text='The number of instances of this particular POI that appear on this particular playfield is >= this number')),
                ('owner', models.ForeignKey(help_text='Faction that owns the POI', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.Faction')),
                ('playfield', models.ForeignKey(help_text='Playfield on which the POI appears', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.Playfield')),
                ('poi', models.ForeignKey(help_text='Name of the POI', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.POI')),
            ],
        ),
        migrations.AddField(
            model_name='playfield',
            name='size',
            field=models.ForeignKey(help_text='Size of the playfield or "orbit"', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.PlayfieldSize'),
        ),
        migrations.AddField(
            model_name='playfield',
            name='system',
            field=models.ForeignKey(help_text='System to which the playfield belongs', on_delete=django.db.models.deletion.CASCADE, to='egs_locations_app.System'),
        ),
    ]
